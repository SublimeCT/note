# 简介
    代码重用性发挥到极致,惰性加载框架

# 安装运行
    /basic 即应用根目录
    首次运行需要设置 /config/web.php 中的 cookieValidationKey 的值

# 目录结构
    basic/                  应用根目录
        composer.json       Composer 配置文件, 描述包信息
        config/             包含应用配置及其它配置
            console.php     控制台应用配置信息
            web.php         Web 应用配置信息
        commands/           包含控制台命令类
        controllers/        包含控制器类
        models/             包含模型类
        runtime/            包含 Yii 在运行时生成的文件，例如日志和缓存文件
        vendor/             包含已经安装的 Composer 包，包括 Yii 框架自身
        views/              包含视图文件
        web/                Web 应用根目录，包含 Web 入口文件
            assets/         包含 Yii 发布的资源文件（javascript 和 css）
            index.php       应用入口文件
        yii                 Yii 控制台命令执行脚本

# saying hello
    -- 在siteController 中添加say 方法
        retuan $this->render('say',['message' => $message]);
    -- 在 views/site 创建视图 say.php
        <?php use yii\helpers\Html; ?>
        <?= Html::encode($message); ?>

# working with forms
    -- 创建模型 models/EntryForm.php
        use yii;
        use yii\base\Model;
        # yii\db\Model 通常是普通模型类的父类与数据表无关
        # yii\db\ActiveRecord 通常是普通模型类的父类但与数据表有关联
    -- 新建 rules 方法
        return [
            [['name', 'email'], 'required'],
            ['email', 'email']
        ];
    -- 添加entry 方法
        $model = new EntryForm();
        if ($model->load(Yii::$app->request->post()) && $model->validate()) {
            // 验证数据 ...
            return $this->render('entry-confirm', ['model'=>$model]);
        }else{
            return $this->render('entry', ['model'=>$model]);
        }

# working with databases
    -- 建立yii2basic 数据库, 建立country 表
    -- 配置数据库
        config/db.php
    -- 在 models/ 创建活动记录 Country.php
        namespace app\models;
        use yii\db\ActiveRecord;
        class Country extends ActiveRecord{}            // Yii根据类名对应表名, 单独设置需要修改 Yii\db\ActiveRecord::$tableName()






