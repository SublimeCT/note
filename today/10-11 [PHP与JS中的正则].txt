<?php
# PHP中的数据类型
    ...
# 正则修饰符
    i   不区分大小写
    m   行内开头/结尾匹配
    x   忽略空白
# PHP中的正则方法
    int preg_match ( string $pattern , string $subject [, array &$matches ...] )
        其中$matches为数组,$matches[0]为正则匹配到的文本,$matches[1]为第一个匹配到的正则子组...
        返回值为0/1[匹配次数]/false[出错]

    array preg_grep ( string $pattern , array $input [, ... ] )
        匹配数组元素,并返回匹配成功的元素组成的数组

    int preg_match_all ( string $pattern , string $subject [, array &$matches ...] )
        同preg_match,匹配多次
        返回值是匹配次数/false[出错]

    mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &$count ]] )
        $subject 可以是字符串和数组
        $limit为替换次数,默认-1[无限]
        返回值是替换后的字符串/数组/null[出错]

    array preg_split ( string $pattern , string $subject [...] )
        按照正则匹配的字符[不区分大小写]分割字符串,返回数组

# JS中的正则

    rgExp.exec(str)
        用正则表达式模式在字符串中运行查找，并返回包含该查找结果的一个数组。
        返回数组的0包含完整字符串,1是子组

    stringObj.match(rgExp)
        使用正则表达式模式对字符串执行查找，并将包含查找的结果作为数组返回。

    stringObj.replace(rgExp, replaceText)
        返回根据正则表达式进行文字替换后的字符串的复制
        replaceText中匹配子组使用'$n'

    stringObj.search(rgExp)
        返回与正则表达式查找内容匹配的第一个子字符串的位置。

    stringObj.split([separator[, limit]])
        将一个字符串分割为子字符串，然后将结果作为字符串数组返回。
        limit为匹配次数













